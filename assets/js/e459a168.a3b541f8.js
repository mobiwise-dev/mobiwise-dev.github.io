"use strict";(self.webpackChunkmobiwise_dev_github_io=self.webpackChunkmobiwise_dev_github_io||[]).push([[4088],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var o=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=o.createContext({}),c=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return o.createElement(s.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},b=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(t),b=a,m=d["".concat(s,".").concat(b)]||d[b]||p[b]||r;return t?o.createElement(m,i(i({ref:n},u),{},{components:t})):o.createElement(m,i({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=b;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<r;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}b.displayName="MDXCreateElement"},8562:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var o=t(7462),a=(t(7294),t(3905));const r={},i="mbrApp.showDialog",l={unversionedId:"mbrApp/showDialog",id:"mbrApp/showDialog",title:"mbrApp.showDialog",description:"La fonction mbrApp.showDialog de Mobirise est une fonction qui cr\xe9e une bo\xeete de dialogue personnalis\xe9e \xe0 l'aide de la biblioth\xe8que bootbox.js. Cette bo\xeete de dialogue peut contenir un titre, un corps et des boutons pour effectuer des actions. La fonction v\xe9rifie d'abord si une bo\xeete de dialogue avec le m\xeame titre et corps existe d\xe9j\xe0, afin d'\xe9viter la cr\xe9ation de doublons.",source:"@site/docs/mbrApp/showDialog.md",sourceDirName:"mbrApp",slug:"/mbrApp/showDialog",permalink:"/docs/mbrApp/showDialog",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"mbrApp.regExtension",permalink:"/docs/mbrApp/regExtension"},next:{title:"mbrApp.waitAllAndDo",permalink:"/docs/mbrApp/waitAllAndDo"}},s={},c=[{value:"Exemple",id:"exemple",level:2},{value:"En r\xe9sum\xe9",id:"en-r\xe9sum\xe9",level:2}],u={toc:c},d="wrapper";function p(e){let{components:n,...t}=e;return(0,a.kt)(d,(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"mbrappshowdialog"},"mbrApp.showDialog"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'function(a) {\n  var b = !1;\n  this.$body.find(".bootbox.modal").length && this.$body.find(".bootbox.modal").each(function(e, h) {\n    c(h).find(".modal-title").length && c(h).find(".modal-title").html() === a.title ? b = !0 : c(h).find(".modal-body").length && c(h).find(".modal-body").html() === a.body && (b = !0)\n  });\n  if (!b) {\n    var e = this;\n    a = a || {};\n    var h = {};\n    a.cancel && (h.cancel = {\n      label: a.cancelLabel || k("Cancel"),\n      className: "btn-default",\n      callback: function() {\n        a.cancel.call(g, g)\n      }\n    });\n    a.success && (h.success = {\n      label: a.successLabel || k("Ok"),\n      className: "btn-primary",\n      callback: function() {\n        a.success.call(g, g)\n      }\n    });\n    if (a.buttons)\n      for (var m in a.buttons)(function(a) {\n        h[m] = {\n          label: a.label || "",\n          className: (a.className || "") + " " + (/btn-primary|btn-default/.test(a.className) ? "" : a.default ? "btn-primary" : "btn-default"),\n          callback: function() {\n            if (a.callback) return a.callback()\n          }\n        }\n      })(a.buttons[m]);\n    var g = bootbox.dialog({\n      size: a.size,\n      title: a.title,\n      className: a.className + (a.flex ? " mbr-flex" : ""),\n      message: a.body || "\\x3c!-- Empty body --\\x3e",\n      buttons: h,\n      onEscape: a.oncancel || function() {},\n      show: !1\n    });\n    a.id && g.attr("id", a.id);\n    for (var f in a.buttons) g.find("[data-bb-handler=" + f + "]").attr("name", f);\n    a.create && a.create.call(g, g);\n    g.find("select").dropdown({\n      absolutePos: !0,\n      align: "right"\n    });\n    g.find("input.mbr-color").each(function() {\n      var a = c(this),\n        b = function(a, b) {\n          b = b.map(function(a) {\n            return a.toUpperCase()\n          });\n          if (-1 == b.indexOf(a.toUpperCase())) return !0\n        };\n      a.spectrum("destroy").spectrum({\n        showButtons: !1,\n        preferredFormat: "hex",\n        allowEmpty: !0,\n        showInput: !0,\n        showPaletteOnly: !0,\n        togglePaletteOnly: !0,\n        togglePaletteMoreText: k("More") + " >",\n        togglePaletteLessText: k("Less") + " <",\n        replacerClassName: a.hasClass("pull-right") ? "pull-right" : "",\n        appendTo: "#innerFontDialog",\n        maxSelectionSize: 1,\n        palette: d.getThemeColorsSet(7),\n        move: function(b) {\n          a.val(b && b.toHexString());\n          a.trigger("change")\n        },\n        hide: function(a) {\n          if (a) {\n            var c;\n            (c = d.projectSettings.theme.additionalSetColors) ? b(a.toHexString(),\n              c) && b(a.toHexString(), d.getThemeColorsSet(7)[0]) && (7 > c.length ? c.push(a.toHexString()) : (c.unshift(a.toHexString()), c.pop())): b(a.toHexString(), d.getThemeColorsSet(7)[0]) ? d.projectSettings.theme.additionalSetColors = [a.toHexString()] : d.projectSettings.theme.additionalSetColors = []\n          }\n        }\n      })\n    });\n    a.show && a.show.call(g, g);\n    g.on("shown.bs.modal", function() {\n      e.fire("modalDialogShow", g, a)\n    });\n    c(g).on("hide.bs.modal", function() {\n      g.find("select").each(function() {\n        c(c(this).data("dropdownjs-ul")).remove()\n      });\n      g.find("input.mbr-color").spectrum("hide");\n      e.fire("modalDialogHide", g)\n    });\n    g.on("hidden.bs.modal", function() {\n      d.$body.find(".modal:visible").length && d.$body.addClass("modal-open");\n      g.find("input.mbr-color").spectrum("destroy");\n      a.onhide && (a.onhide.call(g, g), console.log("Warning: Using showDialog.onhide is depracated, use showDialog.hide instead"));\n      a.hide && a.hide.call(g, g);\n      e.fire("modalDialogHidden", g)\n    });\n    g.modal("show");\n    return g\n  }\n}\n')),(0,a.kt)("p",null,"La fonction ",(0,a.kt)("inlineCode",{parentName:"p"},"mbrApp.showDialog")," de Mobirise est une fonction qui cr\xe9e une bo\xeete de dialogue personnalis\xe9e \xe0 l'aide de la biblioth\xe8que ",(0,a.kt)("a",{parentName:"p",href:"https://bootboxjs.com/"},"bootbox.js"),". Cette bo\xeete de dialogue peut contenir un titre, un corps et des boutons pour effectuer des actions. La fonction v\xe9rifie d'abord si une bo\xeete de dialogue avec le m\xeame titre et corps existe d\xe9j\xe0, afin d'\xe9viter la cr\xe9ation de doublons."),(0,a.kt)("p",null,"La fonction prend en entr\xe9e un objet contenant plusieurs param\xe8tres optionnels, tels que le titre, le corps, les boutons, la taille, etc. En fonction des param\xe8tres fournis, la bo\xeete de dialogue est configur\xe9e avec les boutons appropri\xe9s et les actions correspondantes sont d\xe9finies."),(0,a.kt)("p",null,"La fonction utilise \xe9galement la biblioth\xe8que ",(0,a.kt)("inlineCode",{parentName:"p"},"spectrum.js")," pour ajouter un s\xe9lecteur de couleur \xe0 certains \xe9l\xe9ments de la bo\xeete de dialogue."),(0,a.kt)("p",null,"Enfin, la fonction renvoie l'objet de la bo\xeete de dialogue cr\xe9\xe9e, qui peut \xeatre utilis\xe9 pour effectuer des op\xe9rations ult\xe9rieures sur la bo\xeete de dialogue, comme la fermeture."),(0,a.kt)("h2",{id:"exemple"},"Exemple"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'mbrApp.shoDialog({\n  title: "Confirmer l\'action",\n  body: "Voulez-vous vraiment effectuer cette action ?",\n  success: function () {\n    // Code \xe0 ex\xe9cuter lorsque l\'utilisateur clique sur le bouton "OK"\n    alert("Action confirm\xe9e !");\n  },\n  cancel: function () {\n    // Code \xe0 ex\xe9cuter lorsque l\'utilisateur clique sur le bouton "Annuler"\n    alert("Action annul\xe9e.");\n  },\n});\n')),(0,a.kt)("h2",{id:"en-r\xe9sum\xe9"},"En r\xe9sum\xe9"),(0,a.kt)("p",null,"La fonction cr\xe9e une bo\xeete de dialogue personnalis\xe9e. Cette bo\xeete de dialogue peut contenir un titre, un corps et des boutons pour effectuer des actions."))}p.isMDXComponent=!0}}]);