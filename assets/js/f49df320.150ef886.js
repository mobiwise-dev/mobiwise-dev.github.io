"use strict";(self.webpackChunkmobiwise_dev_github_io=self.webpackChunkmobiwise_dev_github_io||[]).push([[7730],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),c=s(n),m=r,g=c["".concat(l,".").concat(m)]||c[m]||u[m]||o;return n?a.createElement(g,i(i({ref:t},d),{},{components:n})):a.createElement(g,i({ref:t},d))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[c]="string"==typeof e?e:r,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4886:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:1},i="mbrApp.Core.addPage",p={unversionedId:"mbrApp.Core/addPage",id:"mbrApp.Core/addPage",title:"mbrApp.Core.addPage",description:"La fonction addPage est une fonction dont le but est de permettre l'ajout d'une page \xe0 un projet Mobirise. Elle prend en entr\xe9e les arguments suivants :",source:"@site/docs/mbrApp.Core/addPage.md",sourceDirName:"mbrApp.Core",slug:"/mbrApp.Core/addPage",permalink:"/docs/mbrApp.Core/addPage",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docSidebar",previous:{title:"mbrApp.Core",permalink:"/docs/category/mbrappcore"},next:{title:"Bridge",permalink:"/docs/category/bridge"}},l={},s=[{value:"Exemple",id:"exemple",level:2},{value:"En r\xe9sum\xe9",id:"en-r\xe9sum\xe9",level:2}],d={toc:s},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mbrappcoreaddpage"},"mbrApp.Core.addPage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'function(c, n, d, f, g) {\n  if (!d) {\n    var m = !0,\n      p = this.Core.addPage(c);\n    d = p.name;\n    f = f || p.title;\n    g && (a.Core.resultJSON[d].components = g)\n  }\n  if (!d) return !1;\n  f = a.escapeHtml(f);\n  this.fire("addPage", d);\n  p = b(["<li" + (n ? \' class="main-page"\' : "") + ">", \'<a href="javascript:void(0)" class="clearfix">\', \'<span data-tooltipster="bottom"\' + (n ? "" : \' title="\' + e("Drag Page") + \'"\') + ">" + f + "</span>", \'<div class="btn-group">\', \'<button class="btn btn-primary app-page-clone" data-tooltipster="bottom" title="\' + e("Clone Page") + \'">\', \'<i class="mbr-icon-copy"></i></button>\', \'<button class="btn btn-info app-page-settings" data-tooltipster="bottom" title="\' +\n    e("Page Settings") + \'">\', \'<i class="mbr-icon-cog"></i></button>\', n ? "" : \'<button class="btn btn-material-red app-page-remove" data-tooltipster="bottom" title="\' + e("Remove Page") + \'"><i class="mbr-icon-trash"></i></button>\', \'<button class="btn btn-info app-page-ok" data-tooltipster="bottom" title="\' + e("OK") + \'">\', \'<i class="mbr-icon-check"></i></button></div></a></li>\'\n  ].join(""));\n  p.find(">a").attr({\n    "data-page": d,\n    "data-title": f\n  });\n  p = this.applyFilter("addPage", p, d);\n  var h = this.$pagesList.find(".list .sortable-container");\n  m ? (c ? (m = this.$pagesList.find(\'.list li > a[data-page="\' + c + \'"]\').parent(), m.hasClass("main-page") ? h.prepend(p) : m.after(p)) : h.prepend(p), l(h)) : p.hasClass("main-page") ? h.before(p) : h.append(p);\n  this.fire("addedPage", d, arguments);\n  return p\n}\n')),(0,r.kt)("p",null,"La fonction ",(0,r.kt)("inlineCode",{parentName:"p"},"addPage")," est une fonction dont le but est de permettre l'ajout d'une page \xe0 un projet Mobirise. Elle prend en entr\xe9e les arguments suivants :"),(0,r.kt)("p",null,"c : le nom de la page existante \xe0 partir de laquelle la nouvelle page doit \xeatre ajout\xe9e (optionnel)",(0,r.kt)("br",null),"\nn : un bool\xe9en indiquant si la page doit \xeatre ajout\xe9e en tant que page principale (optionnel)",(0,r.kt)("br",null),"\nd : le nom de la nouvelle page (optionnel)",(0,r.kt)("br",null),"\nf : le titre de la nouvelle page (optionnel)",(0,r.kt)("br",null),"\ng : un objet contenant les composants \xe0 ajouter \xe0 la nouvelle page (optionnel)"),(0,r.kt)("p",null,"Si le param\xe8tre ",(0,r.kt)("inlineCode",{parentName:"p"},"d")," n'est pas d\xe9fini, la fonction va ajouter une nouvelle page au projet Mobirise, avec le titre et les composants sp\xe9cifi\xe9s. Si ",(0,r.kt)("inlineCode",{parentName:"p"},"d")," est d\xe9fini, la fonction va cr\xe9er une nouvelle page avec le nom sp\xe9cifi\xe9, et les param\xe8tres ",(0,r.kt)("inlineCode",{parentName:"p"},"f")," et ",(0,r.kt)("inlineCode",{parentName:"p"},"g")," seront ignor\xe9s. Si ",(0,r.kt)("inlineCode",{parentName:"p"},"c")," est d\xe9fini, la nouvelle page sera ajout\xe9e apr\xe8s la page nomm\xe9e ",(0,r.kt)("inlineCode",{parentName:"p"},"c"),". Si ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," est vrai, la nouvelle page sera ajout\xe9e en tant que page principale."),(0,r.kt)("p",null,"La fonction retourne un objet ",(0,r.kt)("strong",{parentName:"p"},"jQuery")," repr\xe9sentant la nouvelle page ajout\xe9e."),(0,r.kt)("h2",{id:"exemple"},"Exemple"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'addPage(\n  "\xc0 propos", // Nom de la page ou \'undefined\'\n  false, // D\xe9finit si page principale\n  "contact.html", // Nom de la page\n  "Page de contact", // Titre de la page\n  {\n    /* ici les composants de la page de contact */\n  }\n);\n')),(0,r.kt)("h2",{id:"en-r\xe9sum\xe9"},"En r\xe9sum\xe9"),(0,r.kt)("p",null,"En r\xe9sum\xe9, la fonction 'addPage' est utilis\xe9e pour ajouter facilement une nouvelle page \xe0 un projet Mobirise, en fournissant le nom, le titre et les composants de la nouvelle page."))}u.isMDXComponent=!0}}]);